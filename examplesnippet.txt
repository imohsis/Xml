discovering dom content
function displayBusinessCardData(){
  var xmldata = document,getElementById("xmldata1");
  var bizCard = xmldata1.getElementByTagName("BusinessCard")[0];

  var name = "Name: " +bizCard.getElementByTagName("Name")[0].firstChild.data;
  var phone1Label = bizzCard.getElementByTagName("phone")[0].getAttribute("type") + ":";
  var phone1 =phone1Label + bizCard.getElementByTagName("phone")[0].firstChild.data;
  var phone2Label = bizzCard.getElementByTagName("phone")[1].getAttribute("type") + ":";
  var phone2 =phone1Labe2 + bizCard.getElementByTagName("phone")[1].firstChild.data;
  var phone3Label = bizzCard.getElementByTagName("phone")[2].getAttribute("type") + ":";
  var phone2 = phone1Labe3 + bizCard.getElementByTagName("phone")[2].firstChild.data;
  var email = "email:" + bizCard.getElementByTagName("phone")[0].firstChild.data;
  alert("BusinessCard Data: \n\n" + name +"\n" + phone1 + "\n" + phone2 + "\n" + phone3 + "\n" + email + "\n")
  }

function populateFields(){
  var xmldata = document,getElementById("xmldata1");
  var bizCard = xmldata1.getElementByTagName("BusinessCard")[0];

  var name = "Name: " +bizCard.getElementByTagName("Name")[0].firstChild.data;
  var phone1Str = bizzCard.getElementByTagName("phone")[0].getAttribute("type") + ":";
  var phone1 = phone1Label + bizCard.getElementByTagName("phone")[0].firstChild.data;
  var phone2Str = bizzCard.getElementByTagName("phone")[1].getAttribute("type") + ":";
  var phone2 =phone1Labe2 + bizCard.getElementByTagName("phone")[1].firstChild.data;
  var phone3Str = bizzCard.getElementByTagName("phone")[2].getAttribute("type") + ":";
  var phone2 = phone1Labe3 + bizCard.getElementByTagName("phone")[2].firstChild.data;
  var email = "email:" + bizCard.getElementByTagName("phone")[0].firstChild.data;
  
   
  document.querySelector("#hideEmail").addEventListener("click, hideEmail");
  document.querySelector("#showEmail").addEventListener("click, showEmail");
 }
function hideEmail(){
document.getElementById("email").style.display = 'none';
} 
function showEmail(){
document.getElementById("email").style.display = '';
} 

window.addEventListener("load", populateFields);



-----Creating New Document Content

//for each BusinessCard, loop over its tasg and create a new <div> to each card along with the information for all the fields
for(var i=0; i < bizCards.length;i++){
var currentCard = bizCard[i]; //store reference to the currrent bizCard

// make a new <div> for the whole 
var newCard = document.createElement("div");
newCard.setAttribute("className", "Name");
newCard.setAttribute("class", "BusinessCard");

// now create a <div> for the name
var newName = document.createElement("div");
newName.setAttribute("className", "Name");
newName.setAttribute("class", "Name");
var nameStr = document.createTextNode(currentCard.getElementByTagName("Name")[0] );
newName.appendChild(nameStr);
newName.appendChild(newName);

//Create separate <divs> for the phones
var phones = currentCard.getElementsByTagName("phone");
var newPhone;
for (var j=0; j < phone.length; j++){

newPhone = document.createElement("div");
newphone.setAttribute("className", "phone");
newphone.setAttribute("class", "phone");

var labelStr = currentCard.getElementsByTagName("phone")[j].getAttribute("type");
var phoneStr = document.createTextNode(labelStr + currentCard.)

newPhone.appendChild(phoneStr);
newCard.appendChild(newPhone);

// create a <div> for the email 
var newEmail = document.createElement("div");
newEmail.setAttribute("className", "email");
newEmail.setAttribute("class", "email");
var emailStr = document.createTextNode("email: " + currentCard.getElementsByTagName)
newEmail.appendChild(emailStr);
newCard.appendChild(newEmail);


// now add the new <div> containing the card info to the web page
document.getElementByTagName("body")[0].appendChild(newCard);
}

}
}
CHAPTER 8  XSLT EXAMPLES

--- Simple Transform
<?xml-stylesheet type="text/xsl" href="simpletransform.xslt"?>

<xsl:template match="JavacoTea">
<html>
<head>
<title>New Herbal Tea Available!</title>
</head>
<body>
 <img src="photos/javaco_tea_logo.gif" />
 <h1>
 </h1>
 </body>
 </html>
 </xsl:template>
 
 <xsl:value-of select="text()"/>
 
 XSLT and CSS
 <link rel="stylesheet" href="simpletransform.css"/>
 
 
 ---Repeating Items
 
 <xsl:for-each select="/items/item">
 <h1 style="color:#)D3427">
 <img style="border:0; margin:0px; 10px 0px 10px">
 <xsl:attribute name="src">
 <xsl:vale-of select="photo"/>
 </xsl:attribute>
 </img>
 <xsl:value-of select="name"/>
 <xsl:text>....</xsl:text>
 <xsl:value-of select="type"/>
 </h1>
 </xsl:for-each>
 
 
 
 ----conditional logic
 
 <xsl:if test="@available = 'no'">
 <h1 style="color:#8A8A8A">
 <img style="border:0; margin-left:10px">
 <xsl:attribite name="src">
 <xsl:value-of select="photo"/>
 </xsl:attibute>
 </img>
 
  <xsl:value-of select="name"/>
   <xsl:text>....</xsl:text>
 <xsl:value-of select="type"/>
 </h1>
 <xsl:if>
 <xsl:if test="@available = 'yes'">
 <h1 style="color:#0D3427">
 <img style="border:0; margin-left:10px">
 <xsl:attribite name="src">
 <xsl:value-of select="photo"/>
 </xsl:attibute>
 </img>
 
  <xsl:value-of select="name"/>
   <xsl:text> </xsl:text>
 <xsl:value-of select="type"/>
 </h1>
 
 
 
 
 CHAPTER 9:  DOCUMENT TYPE DEFINITIONS
 
 ----Declaring a DTD for businesscard
 
 <!ELEMENT Businesscard (Name, phone+, email?)>
 
 <!ELEMENT Name (#PCDATA)>
 
 <!ELEMENT phone (#PCDATA)>
 <!ATTLIST phone type(mobile| fax| work| home) #REQUIRED>
 
 <!ELEMENT email (#PCDATA)>
 
 <DOCTYPE BusinessCard SYSTEM "businesscard.dtd>"
 


 CHAPTER 10: XML  SCHEMA
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 



















